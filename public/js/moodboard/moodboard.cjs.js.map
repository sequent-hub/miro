{"version":3,"file":"moodboard.cjs.js","sources":["../src/core/PixiEngine.js","../src/core/StateManager.js","../src/core/EventBus.js","../src/core/ApiClient.js","../src/MoodBoard.js","../src/lib.js"],"sourcesContent":["import * as PIXI from 'pixi.js';\r\n\r\nexport class PixiEngine {\r\n    constructor(container, eventBus, options) {\r\n        this.container = container;\r\n        this.eventBus = eventBus;\r\n        this.options = options;\r\n        this.objects = new Map();\r\n    }\r\n\r\n    async init() {\r\n        this.app = new PIXI.Application({\r\n            width: this.options.width,\r\n            height: this.options.height,\r\n            backgroundColor: this.options.backgroundColor,\r\n            antialias: true\r\n        });\r\n\r\n        this.container.appendChild(this.app.view);\r\n\r\n        console.log('PIXI Engine initialized');\r\n    }\r\n\r\n    createObject(objectData) {\r\n        // Пока простая заглушка - красный квадрат\r\n        const graphics = new PIXI.Graphics();\r\n        graphics.beginFill(0xFF0000);\r\n        graphics.drawRect(0, 0, objectData.width || 100, objectData.height || 100);\r\n        graphics.endFill();\r\n\r\n        graphics.x = objectData.position.x;\r\n        graphics.y = objectData.position.y;\r\n        graphics.interactive = true;\r\n        graphics.cursor = 'pointer';\r\n\r\n        this.app.stage.addChild(graphics);\r\n        this.objects.set(objectData.id, graphics);\r\n\r\n        console.log('Created object:', objectData.type);\r\n    }\r\n\r\n    removeObject(objectId) {\r\n        const pixiObject = this.objects.get(objectId);\r\n        if (pixiObject) {\r\n            this.app.stage.removeChild(pixiObject);\r\n            this.objects.delete(objectId);\r\n        }\r\n    }\r\n\r\n    destroy() {\r\n        this.app.destroy(true);\r\n    }\r\n}","export class StateManager {\r\n    constructor(eventBus) {\r\n        this.eventBus = eventBus;\r\n        this.state = {\r\n            board: {},\r\n            objects: [],\r\n            selectedObjects: [],\r\n            isDirty: false\r\n        };\r\n    }\r\n\r\n    loadBoard(boardData) {\r\n        this.state.board = boardData;\r\n        this.state.objects = boardData.objects || [];\r\n        this.eventBus.emit('board:loaded', boardData);\r\n    }\r\n\r\n    addObject(objectData) {\r\n        this.state.objects.push(objectData);\r\n        this.markDirty();\r\n        this.eventBus.emit('object:created', objectData);\r\n    }\r\n\r\n    removeObject(objectId) {\r\n        this.state.objects = this.state.objects.filter(obj => obj.id !== objectId);\r\n        this.markDirty();\r\n        this.eventBus.emit('object:deleted', objectId);\r\n    }\r\n\r\n    getObjects() {\r\n        return [...this.state.objects];\r\n    }\r\n\r\n    serialize() {\r\n        return {\r\n            board: { ...this.state.board, objects: this.state.objects }\r\n        };\r\n    }\r\n\r\n    markDirty() {\r\n        this.state.isDirty = true;\r\n    }\r\n\r\n    isDirty() {\r\n        return this.state.isDirty;\r\n    }\r\n}","export class EventBus {\r\n    constructor() {\r\n        this.events = new Map();\r\n    }\r\n\r\n    on(event, callback) {\r\n        if (!this.events.has(event)) {\r\n            this.events.set(event, new Set());\r\n        }\r\n        this.events.get(event).add(callback);\r\n    }\r\n\r\n    off(event, callback) {\r\n        this.events.get(event)?.delete(callback);\r\n    }\r\n\r\n    emit(event, data) {\r\n        const callbacks = this.events.get(event);\r\n        if (callbacks) {\r\n            callbacks.forEach(callback => callback(data));\r\n        }\r\n    }\r\n\r\n    removeAllListeners() {\r\n        this.events.clear();\r\n    }\r\n}","// src/core/ApiClient.js\r\nexport class ApiClient {\r\n    constructor(baseUrl, authToken = null) {\r\n        this.baseUrl = baseUrl;\r\n        this.authToken = authToken;\r\n    }\r\n\r\n    async getBoard(boardId) {\r\n        // Заглушка для API запроса\r\n        console.log('API: Getting board', boardId);\r\n        return {\r\n            data: {\r\n                id: boardId,\r\n                name: 'Demo Board',\r\n                objects: []\r\n            }\r\n        };\r\n    }\r\n\r\n    async saveBoard(boardId, boardData) {\r\n        // Заглушка для API запроса\r\n        console.log('API: Saving board', boardId, boardData);\r\n        return {\r\n            data: boardData\r\n        };\r\n    }\r\n}","import { PixiEngine } from './core/PixiEngine.js';\r\nimport { StateManager } from './core/StateManager.js';\r\nimport { EventBus } from './core/EventBus.js';\r\n\r\nexport class MoodBoard {\r\n    constructor(container, options = {}) {\r\n        this.container = typeof container === 'string'\r\n            ? document.querySelector(container)\r\n            : container;\r\n\r\n        if (!this.container) {\r\n            throw new Error('Container not found');\r\n        }\r\n\r\n        this.options = {\r\n            boardId: null,\r\n            autoSave: false,\r\n            width: this.container.clientWidth || 800,\r\n            height: this.container.clientHeight || 600,\r\n            backgroundColor: 0xF5F5F5,\r\n            ...options\r\n        };\r\n\r\n        this.eventBus = new EventBus();\r\n        this.state = new StateManager(this.eventBus);\r\n        this.pixi = new PixiEngine(this.container, this.eventBus, this.options);\r\n\r\n        this.init();\r\n    }\r\n\r\n    async init() {\r\n        try {\r\n            await this.pixi.init();\r\n\r\n            // Создаем пустую доску для демо\r\n            this.state.loadBoard({\r\n                id: this.options.boardId || 'demo',\r\n                name: 'Demo Board',\r\n                objects: [],\r\n                viewport: { x: 0, y: 0, zoom: 1 }\r\n            });\r\n\r\n            console.log('MoodBoard initialized');\r\n        } catch (error) {\r\n            console.error('MoodBoard init failed:', error);\r\n        }\r\n    }\r\n\r\n    createObject(type, position, properties = {}) {\r\n        const objectData = {\r\n            id: 'obj_' + Date.now(),\r\n            type,\r\n            position,\r\n            width: 100,\r\n            height: 100,\r\n            properties,\r\n            created: new Date().toISOString()\r\n        };\r\n\r\n        this.state.addObject(objectData);\r\n        this.pixi.createObject(objectData);\r\n\r\n        return objectData;\r\n    }\r\n\r\n    deleteObject(objectId) {\r\n        this.state.removeObject(objectId);\r\n        this.pixi.removeObject(objectId);\r\n    }\r\n\r\n    get objects() {\r\n        return this.state.getObjects();\r\n    }\r\n\r\n    get boardData() {\r\n        return this.state.serialize();\r\n    }\r\n\r\n    destroy() {\r\n        this.pixi.destroy();\r\n    }\r\n}","// Основной экспорт для NPM пакета\r\nexport { MoodBoard } from './MoodBoard.js';\r\n\r\n// Экспорт core классов\r\nexport { PixiEngine } from './core/PixiEngine.js';\r\nexport { StateManager } from './core/StateManager.js';\r\nexport { ApiClient } from './core/ApiClient.js';\r\nexport { EventBus } from './core/EventBus.js';\r\n\r\n// Версия\r\nexport const version = '1.0.0';\r\n\r\n// CSS стили\r\nimport './styles/moodboard.css';"],"names":["PixiEngine","constructor","container","eventBus","options","this","objects","Map","init","app","PIXI","Application","width","height","backgroundColor","antialias","appendChild","view","console","log","createObject","objectData","graphics","Graphics","beginFill","drawRect","endFill","x","position","y","interactive","cursor","stage","addChild","set","id","type","removeObject","objectId","pixiObject","get","removeChild","delete","destroy","StateManager","state","board","selectedObjects","isDirty","loadBoard","boardData","emit","addObject","push","markDirty","filter","obj","getObjects","serialize","EventBus","events","on","event","callback","has","Set","add","off","_a","data","callbacks","forEach","removeAllListeners","clear","baseUrl","authToken","getBoard","boardId","name","saveBoard","document","querySelector","Error","autoSave","clientWidth","clientHeight","pixi","viewport","zoom","error","properties","Date","now","created","toISOString","deleteObject"],"mappings":"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"}