{"version":3,"file":"moodboard.es.js","sources":["../src/core/PixiEngine.js","../src/core/StateManager.js","../src/core/EventBus.js","../src/MoodBoard.js","../src/core/ApiClient.js","../src/lib.js"],"sourcesContent":["import * as PIXI from 'pixi.js';\r\n\r\nexport class PixiEngine {\r\n    constructor(container, eventBus, options) {\r\n        this.container = container;\r\n        this.eventBus = eventBus;\r\n        this.options = options;\r\n        this.objects = new Map();\r\n    }\r\n\r\n    async init() {\r\n        this.app = new PIXI.Application({\r\n            width: this.options.width,\r\n            height: this.options.height,\r\n            backgroundColor: this.options.backgroundColor,\r\n            antialias: true\r\n        });\r\n\r\n        this.container.appendChild(this.app.view);\r\n\r\n        console.log('PIXI Engine initialized');\r\n    }\r\n\r\n    createObject(objectData) {\r\n        // Пока простая заглушка - красный квадрат\r\n        const graphics = new PIXI.Graphics();\r\n        graphics.beginFill(0xFF0000);\r\n        graphics.drawRect(0, 0, objectData.width || 100, objectData.height || 100);\r\n        graphics.endFill();\r\n\r\n        graphics.x = objectData.position.x;\r\n        graphics.y = objectData.position.y;\r\n        graphics.interactive = true;\r\n        graphics.cursor = 'pointer';\r\n\r\n        this.app.stage.addChild(graphics);\r\n        this.objects.set(objectData.id, graphics);\r\n\r\n        console.log('Created object:', objectData.type);\r\n    }\r\n\r\n    removeObject(objectId) {\r\n        const pixiObject = this.objects.get(objectId);\r\n        if (pixiObject) {\r\n            this.app.stage.removeChild(pixiObject);\r\n            this.objects.delete(objectId);\r\n        }\r\n    }\r\n\r\n    destroy() {\r\n        this.app.destroy(true);\r\n    }\r\n}","export class StateManager {\r\n    constructor(eventBus) {\r\n        this.eventBus = eventBus;\r\n        this.state = {\r\n            board: {},\r\n            objects: [],\r\n            selectedObjects: [],\r\n            isDirty: false\r\n        };\r\n    }\r\n\r\n    loadBoard(boardData) {\r\n        this.state.board = boardData;\r\n        this.state.objects = boardData.objects || [];\r\n        this.eventBus.emit('board:loaded', boardData);\r\n    }\r\n\r\n    addObject(objectData) {\r\n        this.state.objects.push(objectData);\r\n        this.markDirty();\r\n        this.eventBus.emit('object:created', objectData);\r\n    }\r\n\r\n    removeObject(objectId) {\r\n        this.state.objects = this.state.objects.filter(obj => obj.id !== objectId);\r\n        this.markDirty();\r\n        this.eventBus.emit('object:deleted', objectId);\r\n    }\r\n\r\n    getObjects() {\r\n        return [...this.state.objects];\r\n    }\r\n\r\n    serialize() {\r\n        return {\r\n            board: { ...this.state.board, objects: this.state.objects }\r\n        };\r\n    }\r\n\r\n    markDirty() {\r\n        this.state.isDirty = true;\r\n    }\r\n\r\n    isDirty() {\r\n        return this.state.isDirty;\r\n    }\r\n}","export class EventBus {\r\n    constructor() {\r\n        this.events = new Map();\r\n    }\r\n\r\n    on(event, callback) {\r\n        if (!this.events.has(event)) {\r\n            this.events.set(event, new Set());\r\n        }\r\n        this.events.get(event).add(callback);\r\n    }\r\n\r\n    off(event, callback) {\r\n        this.events.get(event)?.delete(callback);\r\n    }\r\n\r\n    emit(event, data) {\r\n        const callbacks = this.events.get(event);\r\n        if (callbacks) {\r\n            callbacks.forEach(callback => callback(data));\r\n        }\r\n    }\r\n\r\n    removeAllListeners() {\r\n        this.events.clear();\r\n    }\r\n}","import { PixiEngine } from './core/PixiEngine.js';\r\nimport { StateManager } from './core/StateManager.js';\r\nimport { EventBus } from './core/EventBus.js';\r\n\r\nexport class MoodBoard {\r\n    constructor(container, options = {}) {\r\n        this.container = typeof container === 'string'\r\n            ? document.querySelector(container)\r\n            : container;\r\n\r\n        if (!this.container) {\r\n            throw new Error('Container not found');\r\n        }\r\n\r\n        this.options = {\r\n            boardId: null,\r\n            autoSave: false,\r\n            width: this.container.clientWidth || 800,\r\n            height: this.container.clientHeight || 600,\r\n            backgroundColor: 0xF5F5F5,\r\n            ...options\r\n        };\r\n\r\n        this.eventBus = new EventBus();\r\n        this.state = new StateManager(this.eventBus);\r\n        this.pixi = new PixiEngine(this.container, this.eventBus, this.options);\r\n\r\n        this.init();\r\n    }\r\n\r\n    async init() {\r\n        try {\r\n            await this.pixi.init();\r\n\r\n            // Создаем пустую доску для демо\r\n            this.state.loadBoard({\r\n                id: this.options.boardId || 'demo',\r\n                name: 'Demo Board',\r\n                objects: [],\r\n                viewport: { x: 0, y: 0, zoom: 1 }\r\n            });\r\n\r\n            console.log('MoodBoard initialized');\r\n        } catch (error) {\r\n            console.error('MoodBoard init failed:', error);\r\n        }\r\n    }\r\n\r\n    createObject(type, position, properties = {}) {\r\n        const objectData = {\r\n            id: 'obj_' + Date.now(),\r\n            type,\r\n            position,\r\n            width: 100,\r\n            height: 100,\r\n            properties,\r\n            created: new Date().toISOString()\r\n        };\r\n\r\n        this.state.addObject(objectData);\r\n        this.pixi.createObject(objectData);\r\n\r\n        return objectData;\r\n    }\r\n\r\n    deleteObject(objectId) {\r\n        this.state.removeObject(objectId);\r\n        this.pixi.removeObject(objectId);\r\n    }\r\n\r\n    get objects() {\r\n        return this.state.getObjects();\r\n    }\r\n\r\n    get boardData() {\r\n        return this.state.serialize();\r\n    }\r\n\r\n    destroy() {\r\n        this.pixi.destroy();\r\n    }\r\n}","// src/core/ApiClient.js\r\nexport class ApiClient {\r\n    constructor(baseUrl, authToken = null) {\r\n        this.baseUrl = baseUrl;\r\n        this.authToken = authToken;\r\n    }\r\n\r\n    async getBoard(boardId) {\r\n        // Заглушка для API запроса\r\n        console.log('API: Getting board', boardId);\r\n        return {\r\n            data: {\r\n                id: boardId,\r\n                name: 'Demo Board',\r\n                objects: []\r\n            }\r\n        };\r\n    }\r\n\r\n    async saveBoard(boardId, boardData) {\r\n        // Заглушка для API запроса\r\n        console.log('API: Saving board', boardId, boardData);\r\n        return {\r\n            data: boardData\r\n        };\r\n    }\r\n}","// Основной экспорт для NPM пакета\r\nexport { MoodBoard } from './MoodBoard.js';\r\n\r\n// Экспорт core классов\r\nexport { PixiEngine } from './core/PixiEngine.js';\r\nexport { StateManager } from './core/StateManager.js';\r\nexport { ApiClient } from './core/ApiClient.js';\r\nexport { EventBus } from './core/EventBus.js';\r\n\r\n// Версия\r\nexport const version = '1.0.0';\r\n\r\n// CSS стили\r\nimport './styles/moodboard.css';"],"names":[],"mappings":"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"}