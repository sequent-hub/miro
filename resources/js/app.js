// –û—Ç–ª–∞–¥–æ—á–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –∑–∞–≥—Ä—É–∑–∫–µ –º–æ–¥—É–ª–µ–π
console.log('üîç –ù–∞—á–∏–Ω–∞–µ–º –∑–∞–≥—Ä—É–∑–∫—É app.js...');
console.log('üìç –¢–µ–∫—É—â–∏–π URL:', window.location.href);
console.log('üïê –í—Ä–µ–º—è –∑–∞–≥—Ä—É–∑–∫–∏:', new Date().toISOString());
console.log('üåê User Agent:', navigator.userAgent);

// –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å Vite
if (typeof import.meta !== 'undefined') {
    console.log('‚úÖ Vite –¥–æ—Å—Ç—É–ø–µ–Ω, import.meta:', import.meta);
} else {
    console.warn('‚ö†Ô∏è Vite –Ω–µ –¥–æ—Å—Ç—É–ø–µ–Ω');
}

// –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å –º–æ–¥—É–ª—è
let MoodBoard;
let moodboardStyles;

// –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ npm —É—Å—Ç–∞–Ω–æ–≤–∏–ª –ø–∞–∫–µ—Ç
console.log('üîç –ü—Ä–æ–≤–µ—Ä—è–µ–º node_modules...');
try {
    const fs = await import('fs');
    console.log('‚úÖ fs –º–æ–¥—É–ª—å –¥–æ—Å—Ç—É–ø–µ–Ω');
} catch (e) {
    console.log('‚ùå fs –º–æ–¥—É–ª—å –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω –≤ –±—Ä–∞—É–∑–µ—Ä–µ');
}

console.log('üîç –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å –ø–∞–∫–µ—Ç–∞...');
try {
    // –ü—Ä–æ–±—É–µ–º –¥–∏–Ω–∞–º–∏—á–µ—Å–∫–∏–π –∏–º–ø–æ—Ä—Ç —Å –ø–æ–ª–Ω—ã–º –ø—É—Ç–µ–º
    const moodboardModule = await import('/node_modules/@sequent-org/moodboard/src/index.js');
    console.log('‚úÖ –ü—Ä—è–º–æ–π –∏–º–ø–æ—Ä—Ç —Å—Ä–∞–±–æ—Ç–∞–ª:', moodboardModule);
} catch (e) {
    console.log('‚ùå –ü—Ä—è–º–æ–π –∏–º–ø–æ—Ä—Ç –Ω–µ —Å—Ä–∞–±–æ—Ç–∞–ª:', e.message);
}

try {
    console.log('üì¶ –ü—ã—Ç–∞–µ–º—Å—è –∏–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞—Ç—å MoodBoard...');
    const moodboardModule = await import('@sequent-org/moodboard');
    console.log('‚úÖ –ú–æ–¥—É–ª—å MoodBoard –∑–∞–≥—Ä—É–∂–µ–Ω:', moodboardModule);
    console.log('üîç –°—Ç—Ä—É–∫—Ç—É—Ä–∞ –º–æ–¥—É–ª—è:', Object.keys(moodboardModule));
    console.log('üîç –¢–∏–ø –º–æ–¥—É–ª—è:', typeof moodboardModule);
    console.log('üîç –ü—Ä–æ—Ç–æ—Ç–∏–ø –º–æ–¥—É–ª—è:', moodboardModule.__proto__);
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –≤—Å–µ –≤–æ–∑–º–æ–∂–Ω—ã–µ –≤–∞—Ä–∏–∞–Ω—Ç—ã —ç–∫—Å–ø–æ—Ä—Ç–∞
    MoodBoard = moodboardModule.MoodBoard || moodboardModule.default || moodboardModule;
    console.log('‚úÖ MoodBoard –∫–ª–∞—Å—Å –ø–æ–ª—É—á–µ–Ω:', MoodBoard);
    console.log('üîç –¢–∏–ø MoodBoard:', typeof MoodBoard);
    console.log('üîç –ö–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä MoodBoard:', MoodBoard?.constructor);
    
    if (!MoodBoard) {
        throw new Error('MoodBoard –∫–ª–∞—Å—Å –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ –º–æ–¥—É–ª–µ');
    }
    
    if (typeof MoodBoard !== 'function') {
        throw new Error(`MoodBoard –Ω–µ —è–≤–ª—è–µ—Ç—Å—è —Ñ—É–Ω–∫—Ü–∏–µ–π/–∫–ª–∞—Å—Å–æ–º. –¢–∏–ø: ${typeof MoodBoard}`);
    }
} catch (importError) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –∏–º–ø–æ—Ä—Ç–∞ MoodBoard:', importError);
    console.error('–î–µ—Ç–∞–ª–∏ –æ—à–∏–±–∫–∏:', {
        message: importError.message,
        stack: importError.stack,
        name: importError.name
    });
    
    // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –æ—à–∏–±–∫—É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
    showError(`–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –º–æ–¥—É–ª—è: ${importError.message}`);
    return;
}

try {
    console.log('üé® –ü—ã—Ç–∞–µ–º—Å—è –∏–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞—Ç—å —Å—Ç–∏–ª–∏...');
    await import('@sequent-org/moodboard/style.css');
    console.log('‚úÖ –°—Ç–∏–ª–∏ –∑–∞–≥—Ä—É–∂–µ–Ω—ã');
} catch (styleError) {
    console.warn('‚ö†Ô∏è –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ —Å—Ç–∏–ª–µ–π:', styleError);
    // –°—Ç–∏–ª–∏ –Ω–µ –∫—Ä–∏—Ç–∏—á–Ω—ã, –ø—Ä–æ–¥–æ–ª–∂–∞–µ–º
}

document.addEventListener('DOMContentLoaded', async () => {
    console.log('üöÄ DOM –∑–∞–≥—Ä—É–∂–µ–Ω, –Ω–∞—á–∏–Ω–∞–µ–º –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—é MoodBoard...');

    try {
        // –ü–æ–ª—É—á–∞–µ–º ID –¥–æ—Å–∫–∏ (–º–æ–∂–Ω–æ –Ω–∞—Å—Ç—Ä–æ–∏—Ç—å –ø–æ–¥ —Å–≤–æ–∏ –Ω—É–∂–¥—ã)
        const boardId = getBoardId();
        console.log('üÜî ID –¥–æ—Å–∫–∏ –ø–æ–ª—É—á–µ–Ω:', boardId);

        // –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä
        const container = document.getElementById('moodboard-container');
        console.log('üì¶ –ö–æ–Ω—Ç–µ–π–Ω–µ—Ä –Ω–∞–π–¥–µ–Ω:', container);

        if (!container) {
            throw new Error('–ö–æ–Ω—Ç–µ–π–Ω–µ—Ä #moodboard-container –Ω–µ –Ω–∞–π–¥–µ–Ω –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–µ');
        }

        // –°–æ–∑–¥–∞–µ–º MoodBoard —Å –∞–≤—Ç–æ—Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ–º
        console.log('üîß –°–æ–∑–¥–∞–µ–º —ç–∫–∑–µ–º–ø–ª—è—Ä MoodBoard...');
        const moodboard = new MoodBoard('#moodboard-container', {
            boardId: boardId,
            saveEndpoint: '/api/moodboard/save',
            loadEndpoint: '/api/moodboard/load',
            theme: 'light'
        });
        console.log('‚úÖ MoodBoard —ç–∫–∑–µ–º–ø–ª—è—Ä —Å–æ–∑–¥–∞–Ω:', moodboard);

        // –î–ª—è –æ—Ç–ª–∞–¥–∫–∏ (–∫–∞–∫ —É –≤–∞—Å –±—ã–ª–æ)
        window.moodboard = moodboard;
        console.log('üåê MoodBoard –¥–æ–±–∞–≤–ª–µ–Ω –≤ window.moodboard');

        // –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ —Å–æ–±—ã—Ç–∏–π –∞–≤—Ç–æ—Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è
        setupEventHandlers(moodboard);
        console.log('‚úÖ –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ —Å–æ–±—ã—Ç–∏–π –Ω–∞—Å—Ç—Ä–æ–µ–Ω—ã');

        console.log('üéâ MoodBoard —É—Å–ø–µ—à–Ω–æ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω —Å –∞–≤—Ç–æ—Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ–º');

    } catch (error) {
        console.error('‚ùå –û—à–∏–±–∫–∞ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ MoodBoard:', error);
        console.error('–î–µ—Ç–∞–ª–∏ –æ—à–∏–±–∫–∏:', {
            message: error.message,
            stack: error.stack,
            name: error.name
        });
        showError(`–ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å —Ä–µ–¥–∞–∫—Ç–æ—Ä: ${error.message}`);
    }
});

/**
 * –ü–æ–ª—É—á–µ–Ω–∏–µ ID –¥–æ—Å–∫–∏
 */
function getBoardId() {
    // 1. –ò–∑ data-–∞—Ç—Ä–∏–±—É—Ç–∞ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞
    const container = document.getElementById('moodboard-container');
    const dataId = container?.getAttribute('data-board-id');
    if (dataId) return dataId;

    // 2. –ò–∑ URL (–Ω–∞–ø—Ä–∏–º–µ—Ä: /boards/uXjVJdaJhdk)
    const urlMatch = window.location.pathname.match(/\/boards\/([a-zA-Z0-9_-]+)/);
    if (urlMatch) return urlMatch[1];

    // 3. –ò–∑ meta —Ç–µ–≥–∞
    const metaId = document.querySelector('meta[name="board-id"]')?.getAttribute('content');
    if (metaId) return metaId;

    // 4. –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º –Ω–æ–≤—ã–π –∫–æ—Ä–æ—Ç–∫–∏–π ID
    return generateShortId();
}

function generateShortId() {
    const chars = 'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789';
    let result = '';
    for (let i = 0; i < 11; i++) {
        result += chars.charAt(Math.floor(Math.random() * chars.length));
    }
    return result;
}

/**
 * –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤ —Å–æ–±—ã—Ç–∏–π
 */
function setupEventHandlers(moodboard) {
    // –û–±—Ä–∞–±–æ—Ç–∫–∞ —É—Å–ø–µ—à–Ω–æ–≥–æ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è
    moodboard.coreMoodboard.eventBus.on('save:success', (data) => {
       // console.log('üíæ –î–∞–Ω–Ω—ã–µ —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã:', data.timestamp);
    });

    // –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–æ–∫ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è
    moodboard.coreMoodboard.eventBus.on('save:error', (data) => {
       // console.error('‚ùå –û—à–∏–±–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è:', data.error);

        // –ú–æ–∂–Ω–æ –ø–æ–∫–∞–∑–∞—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ
        if (data.retryCount >= 3) {
            showError('–ù–µ —É–¥–∞–µ—Ç—Å—è —Å–æ—Ö—Ä–∞–Ω–∏—Ç—å –¥–∞–Ω–Ω—ã–µ. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –∏–Ω—Ç–µ—Ä–Ω–µ—Ç—É.');
        }
    });

    // –û–±—Ä–∞–±–æ—Ç–∫–∞ —Å—Ç–∞—Ç—É—Å–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è (–¥–ª—è –æ—Ç–ª–∞–¥–∫–∏)
    moodboard.coreMoodboard.eventBus.on('save:status-changed', (data) => {
      //  console.log(`üìä –°—Ç–∞—Ç—É—Å —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è: ${data.status}`);
    });

    // –ü—Ä–µ–¥–æ—Ç–≤—Ä–∞—â–µ–Ω–∏–µ —Å–ª—É—á–∞–π–Ω–æ–≥–æ –∑–∞–∫—Ä—ã—Ç–∏—è —Å –Ω–µ—Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω—ã–º–∏ –∏–∑–º–µ–Ω–µ–Ω–∏—è–º–∏
    window.addEventListener('beforeunload', (e) => {
        const saveManager = moodboard.coreMoodboard?.saveManager;
        if (saveManager?.hasUnsavedChanges) {
            e.preventDefault();
            e.returnValue = '–£ –≤–∞—Å –µ—Å—Ç—å –Ω–µ—Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω—ã–µ –∏–∑–º–µ–Ω–µ–Ω–∏—è. –í—ã –¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω–æ —Ö–æ—Ç–∏—Ç–µ –ø–æ–∫–∏–Ω—É—Ç—å —Å—Ç—Ä–∞–Ω–∏—Ü—É?';
            return e.returnValue;
        }
    });
}

/**
 * –ü–æ–∫–∞–∑ –æ—à–∏–±–∫–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
 */
function showError(message) {
    // –ü—Ä–æ—Å—Ç–æ–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ (–º–æ–∂–Ω–æ –∑–∞–º–µ–Ω–∏—Ç—å –Ω–∞ –≤–∞—à UI)
    const notification = document.createElement('div');
    notification.style.cssText = `
        position: fixed;
        top: 20px;
        right: 20px;
        background: #f87171;
        color: white;
        padding: 12px 20px;
        border-radius: 8px;
        font-family: system-ui;
        font-size: 14px;
        z-index: 10000;
        box-shadow: 0 4px 12px rgba(0,0,0,0.15);
    `;
    notification.textContent = message;

    document.body.appendChild(notification);

    // –£–±–∏—Ä–∞–µ–º —á–µ—Ä–µ–∑ 5 —Å–µ–∫—É–Ω–¥
    setTimeout(() => {
        if (notification.parentNode) {
            notification.parentNode.removeChild(notification);
        }
    }, 5000);
}


